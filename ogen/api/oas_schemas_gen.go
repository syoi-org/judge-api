// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Ref: #/components/schemas/CodeforcesLanguage
type CodeforcesLanguage struct {
	ID   float64 `json:"id"`
	Name string  `json:"name"`
}

// GetID returns the value of ID.
func (s *CodeforcesLanguage) GetID() float64 {
	return s.ID
}

// GetName returns the value of Name.
func (s *CodeforcesLanguage) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *CodeforcesLanguage) SetID(val float64) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CodeforcesLanguage) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/CodeforcesProblem
type CodeforcesProblem struct {
	ContestID   float64              `json:"contest_id"`
	Index       string               `json:"index"`
	Name        string               `json:"name"`
	TimeLimit   int                  `json:"time_limit"`
	MemoryLimit int                  `json:"memory_limit"`
	Tags        []string             `json:"tags"`
	Languages   []CodeforcesLanguage `json:"languages"`
	Legend      string               `json:"legend"`
	Input       string               `json:"input"`
	Output      string               `json:"output"`
	Interaction OptString            `json:"interaction"`
	Scoring     OptString            `json:"scoring"`
	Notes       string               `json:"notes"`
	Examples    []CodeforcesTestcase `json:"examples"`
}

// GetContestID returns the value of ContestID.
func (s *CodeforcesProblem) GetContestID() float64 {
	return s.ContestID
}

// GetIndex returns the value of Index.
func (s *CodeforcesProblem) GetIndex() string {
	return s.Index
}

// GetName returns the value of Name.
func (s *CodeforcesProblem) GetName() string {
	return s.Name
}

// GetTimeLimit returns the value of TimeLimit.
func (s *CodeforcesProblem) GetTimeLimit() int {
	return s.TimeLimit
}

// GetMemoryLimit returns the value of MemoryLimit.
func (s *CodeforcesProblem) GetMemoryLimit() int {
	return s.MemoryLimit
}

// GetTags returns the value of Tags.
func (s *CodeforcesProblem) GetTags() []string {
	return s.Tags
}

// GetLanguages returns the value of Languages.
func (s *CodeforcesProblem) GetLanguages() []CodeforcesLanguage {
	return s.Languages
}

// GetLegend returns the value of Legend.
func (s *CodeforcesProblem) GetLegend() string {
	return s.Legend
}

// GetInput returns the value of Input.
func (s *CodeforcesProblem) GetInput() string {
	return s.Input
}

// GetOutput returns the value of Output.
func (s *CodeforcesProblem) GetOutput() string {
	return s.Output
}

// GetInteraction returns the value of Interaction.
func (s *CodeforcesProblem) GetInteraction() OptString {
	return s.Interaction
}

// GetScoring returns the value of Scoring.
func (s *CodeforcesProblem) GetScoring() OptString {
	return s.Scoring
}

// GetNotes returns the value of Notes.
func (s *CodeforcesProblem) GetNotes() string {
	return s.Notes
}

// GetExamples returns the value of Examples.
func (s *CodeforcesProblem) GetExamples() []CodeforcesTestcase {
	return s.Examples
}

// SetContestID sets the value of ContestID.
func (s *CodeforcesProblem) SetContestID(val float64) {
	s.ContestID = val
}

// SetIndex sets the value of Index.
func (s *CodeforcesProblem) SetIndex(val string) {
	s.Index = val
}

// SetName sets the value of Name.
func (s *CodeforcesProblem) SetName(val string) {
	s.Name = val
}

// SetTimeLimit sets the value of TimeLimit.
func (s *CodeforcesProblem) SetTimeLimit(val int) {
	s.TimeLimit = val
}

// SetMemoryLimit sets the value of MemoryLimit.
func (s *CodeforcesProblem) SetMemoryLimit(val int) {
	s.MemoryLimit = val
}

// SetTags sets the value of Tags.
func (s *CodeforcesProblem) SetTags(val []string) {
	s.Tags = val
}

// SetLanguages sets the value of Languages.
func (s *CodeforcesProblem) SetLanguages(val []CodeforcesLanguage) {
	s.Languages = val
}

// SetLegend sets the value of Legend.
func (s *CodeforcesProblem) SetLegend(val string) {
	s.Legend = val
}

// SetInput sets the value of Input.
func (s *CodeforcesProblem) SetInput(val string) {
	s.Input = val
}

// SetOutput sets the value of Output.
func (s *CodeforcesProblem) SetOutput(val string) {
	s.Output = val
}

// SetInteraction sets the value of Interaction.
func (s *CodeforcesProblem) SetInteraction(val OptString) {
	s.Interaction = val
}

// SetScoring sets the value of Scoring.
func (s *CodeforcesProblem) SetScoring(val OptString) {
	s.Scoring = val
}

// SetNotes sets the value of Notes.
func (s *CodeforcesProblem) SetNotes(val string) {
	s.Notes = val
}

// SetExamples sets the value of Examples.
func (s *CodeforcesProblem) SetExamples(val []CodeforcesTestcase) {
	s.Examples = val
}

// Ref: #/components/schemas/CodeforcesTestcase
type CodeforcesTestcase struct {
	Input  string `json:"input"`
	Output string `json:"output"`
}

// GetInput returns the value of Input.
func (s *CodeforcesTestcase) GetInput() string {
	return s.Input
}

// GetOutput returns the value of Output.
func (s *CodeforcesTestcase) GetOutput() string {
	return s.Output
}

// SetInput sets the value of Input.
func (s *CodeforcesTestcase) SetInput(val string) {
	s.Input = val
}

// SetOutput sets the value of Output.
func (s *CodeforcesTestcase) SetOutput(val string) {
	s.Output = val
}

// Ref: #/components/schemas/Error
type Error struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// GetCode returns the value of Code.
func (s *Error) GetCode() string {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *Error) GetMessage() string {
	return s.Message
}

// SetCode sets the value of Code.
func (s *Error) SetCode(val string) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *Error) SetMessage(val string) {
	s.Message = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
